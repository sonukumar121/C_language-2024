
/*65 to 90 (A TO Z).
95 to 127 (a to z).
strings series then strings with recursion.
Input:
s = Geeks
Output: skeeG*/
#include<stdio.h>
#include<string.h>

int revword(char[],int);//fn declare
int main()
 
{
 char str[20];
 int i=0;
 printf("enter any strings= ");
 scanf("%s",&str);//raghav --> i=6 null value
 puts(str);
 
 while(str[i]!='\0')
 {
 
 if(str[i]=='\0')
 {
   i=i-1;
   revword(str,i);	
 }
 else
  //return revword(str,i+1);
  i++;
 	
 }
 
 return revword(str,i);
}

int  revword(char str[],int i)
{
  if(i>=0)
  {
  
   printf("%c",str[i]);	
   return revword(str,i-1);
  
  
}
}


















/*Input: S = "abba"
Output: 1
Explanation: S is a palindrome
Example 2:

Input: S = "abc" 
Output: 0
Explanation: S is not a palindrome*/

#include<stdio.h>
#include<string.h>
int  palindrome(char [],int,int);
int main()

{
	int x,n;
	char str[20];
	int i=0;
 printf("enter the strings=  ");
 scanf("%s",&str[i]);
 
 while(str[i]!='\0')//abc-cba.
 {
 	if(str[i]==str[i+1])
 	{
 		n=i+1;//n=2
	   printf("value of n= %d",n);	
	 }
	 else
     i++;	
 }
 i=i-1;
 printf("after exit loop =%d",i);//i=3.
 palindrome(str,i,n);//i=4->null value

  
}
int palindrome(char str[],int i,int n)
{
	if(i<=n)//3<=2
	{
	printf("%c",str[i]);//a
	return palindrome(str,i-1,n);
    }
}





